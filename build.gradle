buildscript {
	ext {
		springBootVersion = '1.3.1.RELEASE'
	}
	repositories {
		mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.springframework.build.gradle:propdeps-plugin:0.0.7')
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

group = 'devoxx'

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-idea'
}

jar {
	baseName = 'devoxx-proxy'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.hibernate:hibernate-search-orm:5.3.0.Final')
    compile('org.hibernate:hibernate-search-analyzers:5.3.0.Final')
    //compile('org.springframework.boot:spring-boot-starter-data-rest')
	//compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-cloud-connectors')
    compile("org.springframework.boot:spring-boot-starter-security")
	optional('org.springframework.boot:spring-boot-configuration-processor')
	compile('org.codehaus.groovy:groovy')
    compile ('com.google.oauth-client:google-oauth-client-jetty:1.20.0') {
        exclude group:"org.mortbay.jetty", module:"servlet-api"
    }
    compile 'com.google.apis:google-api-services-youtube:v3-rev152-1.21.0'
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
	//testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

compileJava.dependsOn(processResources)

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

task buildDocker(type: Docker, dependsOn: build) {
	push = true
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}
